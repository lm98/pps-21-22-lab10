%EX 1.1
search(X,[X|Xs]).
search(X,[_|Xs]) :- search(X,Xs).

%EX 1.2
search2(X,[X, X|_]).
search2(X,[_|Xs]) :- search2(X,Xs).

%EX 1.3 FULLY RELATIONAL: arguments can be both inputs and outputs
search_two(X, [X,_,X|Xs]).
search_two(X, [_|Xs]) :- search_two(X,Xs).

%EX 1.4
search_anytwo(X,[X|Xs]) :- search(X,Xs).
search_anytwo(X,[_|Xs]) :- search_anytwo(X,Xs).

%EX 2.1 FULLY RELATIONAL: arguments can be both inputs and outputs, but an infinite loop is expected after the first solution production.
% after the first solution
size([], 0).
size([_|Xs], N) :- size(Xs,N2), N is N2 + 1.

%EX 2.2 FULLY RELATIONAL: in the same way of 2.1
size([], zero).
size([_|Xs], N) :- size(Xs, N2), N = s(N2).

%EX 2.3
sum([], 0).
sum([X|Xs], N) :- sum(Xs, N2), N is N2 + X.

%EX 2.4
average(List,A) :- average(List,0,0,A).
average([],C,S,A) :- A is S/C.
average([X|Xs],C,S,A) :-
	C2 is C+1 ,
	S2 is S+X ,
	average(Xs,C2,S2,A).

%EX 2.5
max(List, TempMax, Max) :- 
